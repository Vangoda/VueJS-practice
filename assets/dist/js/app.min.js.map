{"version":3,"file":"app.min.js","sources":["app.min.js"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\nvar app = Vue.createApp({\n  data: function data() {\n    return {\n      player: {\n        maxHp: 100,\n        hp: 100,\n        attack: 7,\n        magic: 20\n      },\n      monster: {\n        maxHp: 100,\n        hp: 100,\n        attack: 10\n      },\n      round: 1,\n      winner: null,\n      battleLog: []\n    };\n  },\n  computed: {\n    monsterBarStyle: function monsterBarStyle() {\n      return \"\".concat(this.monster.hp, \"%\");\n    },\n    playerBarStyle: function playerBarStyle() {\n      return \"\".concat(this.player.hp, \"%\");\n    },\n    playerSPDisabled: function playerSPDisabled() {\n      return this.round % 3 !== 0;\n    }\n  },\n  methods: {\n    resetGame: function resetGame() {\n      // Reset all the data to default values\n      this.player.hp = this.player.maxHp;\n      this.monster.hp = this.monster.maxHp;\n      this.round = 1;\n      this.winner = null;\n      this.battleLog = [];\n    },\n    surrender: function surrender() {\n      // Let the monster win\n      this.winner = \"monster\";\n    },\n    attackMonster: function attackMonster() {\n      // Attack the monster with basic attack.\n      // Get random attack value and subtract it from monsters hp\n      var attack = randDamage(this.player.attack);\n      this.monster.hp -= attack; // Log the action\n\n      this.logAction(\"Player\", \"attack\", \"Monster\", attack); // Monster retaliates\n\n      this.attackPlayer();\n    },\n    spAttackMonster: function spAttackMonster() {\n      // Attack the monster with special attack. Special attack deals\n      // double the damage, but can only be used once every 3rd turn.\n      // Get random attack value and subtract it from monsters hp\n      var attack = randDamage(this.player.attack * 2);\n      this.monster.hp -= attack; // Log the action\n\n      this.logAction(\"Player\", \"s. attack\", \"Monster\", attack); // Monster attacks\n\n      this.attackPlayer();\n    },\n    healPlayer: function healPlayer() {\n      // Attack the monster with special attack. Special attack deals\n      // double the damage, but can only be used once every 3rd turn.\n      // Get random attack value and subtract it from monsters hp\n      var attack = randDamage(this.player.magic, 0);\n      var newHealth = this.player.hp + attack;\n      this.player.hp = newHealth > this.player.maxHp ? this.player.maxHp : newHealth; // Log the action\n\n      this.logAction(\"Player\", \"heal\", \"Player\", attack); // Monster strikes back\n\n      this.attackPlayer();\n    },\n    attackPlayer: function attackPlayer() {\n      // Attack the player with basic attack\n      // Get random damage number and subtract it from players hp.\n      var attack = randDamage(this.monster.attack);\n      this.player.hp -= attack; // Log the action\n\n      this.logAction(\"Monster\", \"attack\", \"Player\", attack); // Increment the special counter as this is the end of the round\n\n      this.round++;\n    },\n    logAction: function logAction(subject, action, object, value) {\n      // Logs each action to battle log\n      // Example Player attacked the Monster for 10dmg.\n      // Subject is player, action is attack, Monster is object and\n      // the value is 10.\n      // message = `${subject} ${action}ed the ${object} for ${value} points.`;\n      this.battleLog.push({\n        subject: subject,\n        object: object,\n        action: action,\n        value: value\n      });\n    }\n  },\n  watch: {\n    round: function round() {\n      // Determine if the game is over and who won\n      if (this.monster.hp < 1) {\n        // Set monster hp to 0 to avoid negative values\n        this.monster.hp = 0;\n\n        if (this.player.hp < 1) {\n          this.player.hp = 0;\n          this.winner = \"draw\";\n        } else {\n          this.winner = \"player\";\n        }\n      } else if (this.player.hp < 1) {\n        this.player.hp = 0;\n        this.winner = \"monster\";\n      } else {\n        // Log the round number if game not over\n        this.battleLog.push({\n          subject: \"Round\",\n          object: \"\",\n          action: \"\",\n          value: this.round\n        });\n      }\n    }\n  }\n});\napp.mount(\"#game\"); // Define some methods\n\nfunction randDamage(attack) {\n  var factor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.2;\n  // Returns a number in range of +- factor value of the attack value.\n  // For example attack of 5 with factor of 20%(0.2) will generate values\n  // between 4 and 6\n  var minAttack = Math.floor((1 - factor) * attack);\n  var maxAttack = Math.floor((1 + factor) * attack);\n  return Math.floor(Math.random() * (maxAttack - minAttack)) + minAttack;\n}\n\n},{}]},{},[1]);\n"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","randDamage","attack","factor","arguments","undefined","minAttack","Math","floor","maxAttack","random","Vue","createApp","data","player","maxHp","hp","magic","monster","round","winner","battleLog","computed","monsterBarStyle","concat","this","playerBarStyle","playerSPDisabled","methods","resetGame","surrender","attackMonster","logAction","attackPlayer","spAttackMonster","healPlayer","newHealth","subject","action","object","value","push","watch","mount"],"mappings":"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"}