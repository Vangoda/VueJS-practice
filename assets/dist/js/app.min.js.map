{"version":3,"file":"app.min.js","sources":["app.min.js"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\nvar app = Vue.createApp({\n  data: function data() {\n    return {\n      player: {\n        maxHp: 100,\n        hp: 100,\n        attack: 7,\n        magic: 20\n      },\n      monster: {\n        maxHp: 100,\n        hp: 100,\n        attack: 10\n      },\n      round: 1,\n      winner: null\n    };\n  },\n  computed: {\n    monsterBarStyle: function monsterBarStyle() {\n      return \"\".concat(this.monster.hp, \"%\");\n    },\n    playerBarStyle: function playerBarStyle() {\n      return \"\".concat(this.player.hp, \"%\");\n    },\n    playerSPDisabled: function playerSPDisabled() {\n      return this.round % 3 !== 0;\n    }\n  },\n  methods: {\n    resetGame: function resetGame() {\n      // Reset all the data to default values\n      this.player.hp = this.player.maxHp;\n      this.monster.hp = this.monster.maxHp;\n      this.round = 1;\n      this.winner = null;\n    },\n    attackMonster: function attackMonster() {\n      // Attack the monster with basic attack.\n      // Get random attack value and subtract it from monsters hp\n      this.monster.hp -= randDamage(this.player.attack);\n      this.attackPlayer();\n    },\n    spAttackMonster: function spAttackMonster() {\n      // Attack the monster with special attack. Special attack deals\n      // double the damage, but can only be used once every 3rd turn.\n      // Get random attack value and subtract it from monsters hp\n      this.monster.hp -= randDamage(this.player.attack * 2);\n      this.attackPlayer();\n    },\n    healPlayer: function healPlayer() {\n      // Attack the monster with special attack. Special attack deals\n      // double the damage, but can only be used once every 3rd turn.\n      // Get random attack value and subtract it from monsters hp\n      var newHealth = this.player.hp + randDamage(this.player.magic, 0);\n      this.player.hp = newHealth > this.player.maxHp ? this.player.maxHp : newHealth;\n      this.attackPlayer();\n    },\n    attackPlayer: function attackPlayer() {\n      // Attack the player with basic attack\n      // Get random damage number and subtract it from players hp.\n      this.player.hp -= randDamage(this.monster.attack); // Increment the special counter as this is the end of the round\n\n      this.round++;\n    }\n  },\n  watch: {\n    round: function round() {\n      // Determine if the game is over and who won\n      if (this.monster.hp < 1) {\n        // Set monster hp to 0 to avoid negative values\n        this.monster.hp = 0;\n\n        if (this.player.hp < 1) {\n          this.player.hp = 0;\n          this.winner = \"draw\";\n        } else {\n          this.winner = \"player\";\n        }\n      } else if (this.player.hp < 1) {\n        this.player.hp = 0;\n        this.winner = \"monster\";\n      }\n    }\n  }\n});\napp.mount(\"#game\"); // Define some methods\n\nfunction randDamage(attack) {\n  var factor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.2;\n  // Returns a number in range of +- factor value of the attack value.\n  // For example attack of 5 with factor of 20%(0.2) will generate values\n  // between 4 and 6\n  var minAttack = Math.floor((1 - factor) * attack);\n  var maxAttack = Math.floor((1 + factor) * attack);\n  return Math.floor(Math.random() * (maxAttack - minAttack)) + minAttack;\n}\n\n},{}]},{},[1]);\n"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","randDamage","attack","factor","arguments","undefined","minAttack","Math","floor","maxAttack","random","Vue","createApp","data","player","maxHp","hp","magic","monster","round","winner","computed","monsterBarStyle","concat","this","playerBarStyle","playerSPDisabled","methods","resetGame","attackMonster","attackPlayer","spAttackMonster","healPlayer","newHealth","watch","mount"],"mappings":"CAAY,SAASA,EAAEC,EAAEC,EAAEC,GAAG,SAASC,EAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,IAAIE,EAAE,mBAAmBC,SAASA,QAAQ,IAAIF,GAAGC,EAAE,OAAOA,EAAEF,GAAE,GAAI,GAAGI,EAAE,OAAOA,EAAEJ,GAAE,GAAkD,MAA1CK,EAAE,IAAIC,MAAM,uBAAuBN,EAAE,MAAaO,KAAK,mBAAmBF,EAAMG,EAAEX,EAAEG,GAAG,CAACS,QAAQ,IAAIb,EAAEI,GAAG,GAAGU,KAAKF,EAAEC,QAAQ,SAASd,GAAoB,OAAOI,EAAlBH,EAAEI,GAAG,GAAGL,IAAeA,IAAIa,EAAEA,EAAEC,QAAQd,EAAEC,EAAEC,EAAEC,GAAG,OAAOD,EAAEG,GAAGS,QAAQ,IAAI,IAAIL,EAAE,mBAAmBD,SAASA,QAAQH,EAAE,EAAEA,EAAEF,EAAEa,OAAOX,IAAID,EAAED,EAAEE,IAAI,OAAOD,EAA7b,CAA4c,CAACa,EAAE,CAAC,SAAST,EAAQU,EAAOJ,gBA2Fxe,SAASK,EAAWC,EAApB,GACE,IAAIC,EAA4B,EAAnBC,UAAUN,aAA+BO,IADxD,EAAA,EACmF,GAI7EC,EAAYC,KAAKC,OAAO,EAAIL,GAAUD,GACtCO,EAAYF,KAAKC,OAAO,EAAIL,GAAUD,GAC1C,OAAOK,KAAKC,MAAMD,KAAKG,UAAYD,EAAYH,IAAcA,EA/FrDK,IAAIC,UAAU,CACtBC,KAAM,WACJ,MAAO,CACLC,OAAQ,CACNC,MAAO,IACPC,GAAI,IACJd,OAAQ,EACRe,MAAO,IAETC,QAAS,CACPH,MAAO,IACPC,GAAI,IACJd,OAAQ,IAEViB,MAAO,EACPC,OAAQ,OAGZC,SAAU,CACRC,gBAAiB,WACf,MAAO,GAAGC,OAAOC,KAAKN,QAAQF,GAAI,MAEpCS,eAAgB,WACd,MAAO,GAAGF,OAAOC,KAAKV,OAAOE,GAAI,MAEnCU,iBAAkB,WAChB,OAAOF,KAAKL,MAAQ,GAAM,IAG9BQ,QAAS,CACPC,UAAW,WAETJ,KAAKV,OAAOE,GAAKQ,KAAKV,OAAOC,MAC7BS,KAAKN,QAAQF,GAAKQ,KAAKN,QAAQH,MAC/BS,KAAKL,MAAQ,EACbK,KAAKJ,OAAS,MAEhBS,cAAe,WAGbL,KAAKN,QAAQF,IAAMf,EAAWuB,KAAKV,OAAOZ,QAC1CsB,KAAKM,gBAEPC,gBAAiB,WAIfP,KAAKN,QAAQF,IAAMf,EAAgC,EAArBuB,KAAKV,OAAOZ,QAC1CsB,KAAKM,gBAEPE,WAAY,WAIV,IAAIC,EAAYT,KAAKV,OAAOE,GAAKf,EAAWuB,KAAKV,OAAOG,MAAO,GAC/DO,KAAKV,OAAOE,GAAKiB,EAAYT,KAAKV,OAAOC,MAAQS,KAAKV,OAAOC,MAAQkB,EACrET,KAAKM,gBAEPA,aAAc,WAGZN,KAAKV,OAAOE,IAAMf,EAAWuB,KAAKN,QAAQhB,QAE1CsB,KAAKL,UAGTe,MAAO,CACLf,MAAO,WAEDK,KAAKN,QAAQF,GAAK,GAEpBQ,KAAKN,QAAQF,GAAK,EAEdQ,KAAKV,OAAOE,GAAK,GACnBQ,KAAKV,OAAOE,GAAK,EACjBQ,KAAKJ,OAAS,QAEdI,KAAKJ,OAAS,UAEPI,KAAKV,OAAOE,GAAK,IAC1BQ,KAAKV,OAAOE,GAAK,EACjBQ,KAAKJ,OAAS,eAKlBe,MAAM,UAYR,KAAK,GAAG,CAAC"}