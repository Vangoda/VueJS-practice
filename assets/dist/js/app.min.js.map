{"version":3,"file":"app.min.js","sources":["app.min.js"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\nvar app = Vue.createApp({\n  data: function data() {\n    return {\n      monsterHP: 100,\n      playerHP: 100\n    };\n  },\n  methods: {\n    attackMonster: function attackMonster() {\n      // Decrease monsters health by random amount\n      var baseAttack = 5;\n      var attackRange = 12; // Random attack the monster\n\n      this.monsterHP -= randomAttack(baseAttack, attackRange); // Keep the HP from going below zero\n\n      this.monsterHP = this.monsterHP < 0 ? 0 : this.monsterHP; // Return the attack\n\n      this.attackPlayer();\n    },\n    attackPlayer: function attackPlayer() {\n      // Decrease players health by random amount\n      var baseAttack = 17;\n      var attackRange = 5; // Random attack the player\n\n      this.playerHP -= randomAttack(baseAttack, attackRange); // Keep the HP from going below zero\n\n      this.playerHP = this.playerHP < 0 ? 0 : this.playerHP;\n    }\n  }\n});\napp.mount(\"#game\");\n\nfunction randomAttack() {\n  var baseAttack = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  var attackRange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n  // Generates a pseudo random attack based on base attack\n  // which is used as min attack value and attack range\n  // which determines the difference between min and max atack\n  // Calculate attack range, do a check on base attack to ensure it's\n  // at least 1.\n  var minAttack = baseAttack < 1 ? 1 : baseAttack;\n  var maxAttack = minAttack + attackRange; // Calculate attack value and return it\n\n  return Math.floor(Math.random() * (maxAttack - minAttack)) + minAttack;\n}\n\n},{}]},{},[1]);\n"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","randomAttack","baseAttack","arguments","undefined","minAttack","maxAttack","Math","floor","random","Vue","createApp","data","monsterHP","playerHP","methods","attackMonster","this","attackPlayer","mount"],"mappings":"CAAY,SAASA,EAAEC,EAAEC,EAAEC,GAAG,SAASC,EAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,IAAIE,EAAE,mBAAmBC,SAASA,QAAQ,IAAIF,GAAGC,EAAE,OAAOA,EAAEF,GAAE,GAAI,GAAGI,EAAE,OAAOA,EAAEJ,GAAE,GAAkD,MAA1CK,EAAE,IAAIC,MAAM,uBAAuBN,EAAE,MAAaO,KAAK,mBAAmBF,EAAMG,EAAEX,EAAEG,GAAG,CAACS,QAAQ,IAAIb,EAAEI,GAAG,GAAGU,KAAKF,EAAEC,QAAQ,SAASd,GAAoB,OAAOI,EAAlBH,EAAEI,GAAG,GAAGL,IAAeA,IAAIa,EAAEA,EAAEC,QAAQd,EAAEC,EAAEC,EAAEC,GAAG,OAAOD,EAAEG,GAAGS,QAAQ,IAAI,IAAIL,EAAE,mBAAmBD,SAASA,QAAQH,EAAE,EAAEA,EAAEF,EAAEa,OAAOX,IAAID,EAAED,EAAEE,IAAI,OAAOD,EAA7b,CAA4c,CAACa,EAAE,CAAC,SAAST,EAAQU,EAAOJ,gBAmCxe,SAASK,EAAT,EAAA,GACMC,EAAgC,EAAnBC,UAAUL,aAA+BM,IAD5D,EAAA,EACuF,EAOjFC,EAAYH,EAAa,EAAI,EAAIA,EACjCI,EAAYD,GAPqB,EAAnBF,UAAUL,aAA+BM,IAF7D,EAAA,EAEwF,GAStF,OAAOG,KAAKC,MAAMD,KAAKE,UAAYH,EAAYD,IAAcA,EA3CrDK,IAAIC,UAAU,CACtBC,KAAM,WACJ,MAAO,CACLC,UAAW,IACXC,SAAU,MAGdC,QAAS,CACPC,cAAe,WAKbC,KAAKJ,WAAaZ,EAHD,EACC,IAIlBgB,KAAKJ,UAAYI,KAAKJ,UAAY,EAAI,EAAII,KAAKJ,UAE/CI,KAAKC,gBAEPA,aAAc,WAKZD,KAAKH,UAAYb,EAHA,GACC,GAIlBgB,KAAKH,SAAWG,KAAKH,SAAW,EAAI,EAAIG,KAAKH,aAI/CK,MAAM,UAgBR,KAAK,GAAG,CAAC"}