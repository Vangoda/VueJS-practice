{"version":3,"file":"app.min.js","sources":["app.min.js"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\nvar currentRound = 1;\nvar app = Vue.createApp({\n  data: function data() {\n    return {\n      monsterHP: 100,\n      playerHP: 100,\n      currentRound: 1,\n      winner: null\n    };\n  },\n  computed: {\n    monsterBarStyles: function monsterBarStyles() {\n      return {\n        width: this.monsterHP + \"%\"\n      };\n    },\n    playerBarStyles: function playerBarStyles() {\n      return {\n        width: this.playerHP + \"%\"\n      };\n    },\n    specialAttackDisabled: function specialAttackDisabled() {\n      // Return true if not divisible by 3.\n      return this.currentRound % 3 !== 0;\n    }\n  },\n  watch: {\n    currentRound: function currentRound() {\n      this.winner = checkVictoryConditions(this.monsterHP, this.playerHP);\n    }\n  },\n  methods: {\n    attackMonster: function attackMonster() {\n      var baseAttack = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 5;\n      var attackRange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 12;\n      // Decrease monsters health by semi random amount\n      // Increment the round counter\n      this.currentRound++; // Random attack the monster\n\n      this.monsterHP -= randomValue(baseAttack, attackRange); // Keep the HP from going below zero\n\n      this.monsterHP = this.monsterHP < 0 ? 0 : this.monsterHP; // Return the attack\n\n      this.attackPlayer(); // Increment round counter\n\n      this.currentRound++;\n    },\n    attackPlayer: function attackPlayer() {\n      // Decrease players health by random amount\n      var baseAttack = 15;\n      var attackRange = 5; // Random attack the player\n\n      this.playerHP -= randomValue(baseAttack, attackRange); // Keep the HP from going below zero\n\n      this.playerHP = this.playerHP < 0 ? 0 : this.playerHP;\n    },\n    specialAttackMonster: function specialAttackMonster() {\n      // Deal a special attack with more damage,\n      // only available every 3rd turn.\n      var baseAttack = 20;\n      var attackRange = 10;\n      this.attackMonster(baseAttack, attackRange);\n    },\n    healPlayer: function healPlayer() {\n      // Restores players health by random amount\n      // Define heal power\n      var baseHeal = 25;\n      var healRange = 10; // Calculate and add the HP to players health\n\n      this.playerHP += randomValue(baseHeal, healRange); // Ensure that HP doesn't go above 100\n\n      this.playerHP = this.playerHP > 100 ? 100 : this.playerHP; // Monster will not just wait around...\n\n      this.attackPlayer(); // Increment round counter\n\n      this.currentRound++;\n    }\n  }\n});\napp.mount(\"#game\");\n\nfunction randomValue() {\n  var baseAttack = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  var attackRange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n  // Generates a pseudo random attack based on base attack\n  // which is used as min attack value and attack range\n  // which determines the difference between min and max atack\n  // Calculate attack range, do a check on base attack to ensure it's\n  // at least 1.\n  var minAttack = baseAttack < 1 ? 1 : baseAttack;\n  var maxAttack = minAttack + attackRange; // Calculate attack value and return it\n\n  return Math.floor(Math.random() * (maxAttack - minAttack)) + minAttack;\n}\n\nfunction checkVictoryConditions(monsterHP, playerHP) {\n  // Checks if anyone won and determine the victor or draw.\n  // Display alert.\n  switch (true) {\n    // Draw condition\n    case monsterHP <= 0 && playerHP <= 0:\n      console.log(\"It's a draw\"); // alert(\"It's a draw\");\n\n      return \"draw\";\n      break;\n    // Victory condition\n\n    case monsterHP <= 0:\n      console.log(\"You have won!\"); // alert(\"You have won!\");\n\n      return \"player\";\n      break;\n    // Loss condition\n\n    case playerHP <= 0:\n      console.log(\"You have lost!\"); // alert(\"You have lost!\");\n\n      return \"monster\";\n      break;\n\n    default:\n      break;\n  }\n}\n\n},{}]},{},[1]);\n"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","randomValue","baseAttack","arguments","undefined","minAttack","maxAttack","Math","floor","random","Vue","createApp","data","monsterHP","playerHP","currentRound","winner","computed","monsterBarStyles","width","this","playerBarStyles","specialAttackDisabled","watch","console","log","checkVictoryConditions","methods","attackMonster","attackRange","attackPlayer","specialAttackMonster","healPlayer","mount"],"mappings":"CAAY,SAASA,EAAEC,EAAEC,EAAEC,GAAG,SAASC,EAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,IAAIE,EAAE,mBAAmBC,SAASA,QAAQ,IAAIF,GAAGC,EAAE,OAAOA,EAAEF,GAAE,GAAI,GAAGI,EAAE,OAAOA,EAAEJ,GAAE,GAAkD,MAA1CK,EAAE,IAAIC,MAAM,uBAAuBN,EAAE,MAAaO,KAAK,mBAAmBF,EAAMG,EAAEX,EAAEG,GAAG,CAACS,QAAQ,IAAIb,EAAEI,GAAG,GAAGU,KAAKF,EAAEC,QAAQ,SAASd,GAAoB,OAAOI,EAAlBH,EAAEI,GAAG,GAAGL,IAAeA,IAAIa,EAAEA,EAAEC,QAAQd,EAAEC,EAAEC,EAAEC,GAAG,OAAOD,EAAEG,GAAGS,QAAQ,IAAI,IAAIL,EAAE,mBAAmBD,SAASA,QAAQH,EAAE,EAAEA,EAAEF,EAAEa,OAAOX,IAAID,EAAED,EAAEE,IAAI,OAAOD,EAA7b,CAA4c,CAACa,EAAE,CAAC,SAAST,EAAQU,EAAOJ,gBAoFxe,SAASK,EAAT,EAAA,GACMC,EAAgC,EAAnBC,UAAUL,aAA+BM,IAD5D,EAAA,EACuF,EAOjFC,EAAYH,EAAa,EAAI,EAAIA,EACjCI,EAAYD,GAPqB,EAAnBF,UAAUL,aAA+BM,IAF7D,EAAA,EAEwF,GAStF,OAAOG,KAAKC,MAAMD,KAAKE,UAAYH,EAAYD,IAAcA,EA3FrDK,IAAIC,UAAU,CACtBC,KAAM,WACJ,MAAO,CACLC,UAAW,IACXC,SAAU,IACVC,aAAc,EACdC,OAAQ,OAGZC,SAAU,CACRC,iBAAkB,WAChB,MAAO,CACLC,MAAOC,KAAKP,UAAY,MAG5BQ,gBAAiB,WACf,MAAO,CACLF,MAAOC,KAAKN,SAAW,MAG3BQ,sBAAuB,WAErB,OAAOF,KAAKL,aAAe,GAAM,IAGrCQ,MAAO,CACLR,aAAc,WACZK,KAAKJ,OAmEX,SAAgCH,EAAWC,GAGzC,QAAQ,GAEN,KAAKD,GAAa,GAAKC,GAAY,EAGjC,OAFAU,QAAQC,IAAI,eAEL,OAIT,KAAKZ,GAAa,EAGhB,OAFAW,QAAQC,IAAI,iBAEL,SAIT,KAAKX,GAAY,EAGf,OAFAU,QAAQC,IAAI,kBAEL,WAzFOC,CAAuBN,KAAKP,UAAWO,KAAKN,YAG9Da,QAAS,CACPC,cAAe,WACb,IAAI1B,EAAgC,EAAnBC,UAAUL,aAA+BM,IAAjBD,UAAU,GAAmBA,UAAU,GAAK,EACjF0B,EAAiC,EAAnB1B,UAAUL,aAA+BM,IAAjBD,UAAU,GAAmBA,UAAU,GAAK,GAGtFiB,KAAKL,eAELK,KAAKP,WAAaZ,EAAYC,EAAY2B,GAE1CT,KAAKP,UAAYO,KAAKP,UAAY,EAAI,EAAIO,KAAKP,UAE/CO,KAAKU,eAELV,KAAKL,gBAEPe,aAAc,WAKZV,KAAKN,UAAYb,EAHA,GACC,GAIlBmB,KAAKN,SAAWM,KAAKN,SAAW,EAAI,EAAIM,KAAKN,UAE/CiB,qBAAsB,WAKpBX,KAAKQ,cAFY,GACC,KAGpBI,WAAY,WAMVZ,KAAKN,UAAYb,EAHF,GACC,IAIhBmB,KAAKN,SAA2B,IAAhBM,KAAKN,SAAiB,IAAMM,KAAKN,SAEjDM,KAAKU,eAELV,KAAKL,mBAIPkB,MAAM,UA8CR,KAAK,GAAG,CAAC"}