{"version":3,"file":"app.min.js","sources":["app.min.js"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Create game app\nvar app = Vue.createApp({\n  data: function data() {\n    return this.initializeGameData();\n  },\n  computed: {\n    monsterBarStyles: function monsterBarStyles() {\n      return {\n        width: this.monsterHP + \"%\"\n      };\n    },\n    playerBarStyles: function playerBarStyles() {\n      return {\n        width: this.playerHP + \"%\"\n      };\n    },\n    specialAttackDisabled: function specialAttackDisabled() {\n      // Return true if not divisible by 3\n      // or if the game is over.\n      return this.currentRound % 3 !== 0 || this.gameOver;\n    },\n    gameOver: function gameOver() {\n      // Returns true if the game is over.\n      // Determined by the value of winner.\n      return this.winner !== null;\n    }\n  },\n  watch: {\n    currentRound: function currentRound() {\n      this.winner = checkVictoryConditions(this.monsterHP, this.playerHP);\n    }\n  },\n  methods: {\n    attackMonster: function attackMonster() {\n      var baseAttack = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 5;\n      var attackRange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 12;\n      // Decrease monsters health by semi random amount\n      // Increment the round counter\n      this.currentRound++; // Random attack the monster\n\n      this.monsterHP -= randomValue(baseAttack, attackRange); // Keep the HP from going below zero\n\n      this.monsterHP = this.monsterHP < 0 ? 0 : this.monsterHP; // Return the attack\n\n      this.attackPlayer(); // Increment round counter\n\n      this.currentRound++;\n    },\n    attackPlayer: function attackPlayer() {\n      // Decrease players health by random amount\n      var baseAttack = 15;\n      var attackRange = 5; // Random attack the player\n\n      this.playerHP -= randomValue(baseAttack, attackRange); // Keep the HP from going below zero\n\n      this.playerHP = this.playerHP < 0 ? 0 : this.playerHP;\n    },\n    specialAttackMonster: function specialAttackMonster() {\n      // Deal a special attack with more damage,\n      // only available every 3rd turn.\n      var baseAttack = 20;\n      var attackRange = 10;\n      this.attackMonster(baseAttack, attackRange);\n    },\n    healPlayer: function healPlayer() {\n      // Restores players health by random amount\n      // Define heal power\n      var baseHeal = 25;\n      var healRange = 10; // Calculate and add the HP to players health\n\n      this.playerHP += randomValue(baseHeal, healRange); // Ensure that HP doesn't go above 100\n\n      this.playerHP = this.playerHP > 100 ? 100 : this.playerHP; // Monster will not just wait around...\n\n      this.attackPlayer(); // Increment round counter\n\n      this.currentRound++;\n    },\n    surrender: function surrender() {\n      // Set winner to monster\n      this.winner = \"monster\";\n    },\n    initializeGameData: function initializeGameData() {\n      // Returns data object with default game data\n      return _defineProperty({\n        monsterHP: 100,\n        playerHP: 100,\n        currentRound: 1,\n        winner: null\n      }, \"currentRound\", 1);\n    },\n    resetGame: function resetGame() {\n      // Resets all the game parameters to default values\n      Object.assign(this.$data, this.initializeGameData());\n    }\n  }\n});\napp.mount(\"#game\");\n\nfunction randomValue() {\n  var baseAttack = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  var attackRange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n  // Generates a pseudo random attack based on base attack\n  // which is used as min attack value and attack range\n  // which determines the difference between min and max atack\n  // Calculate attack range, do a check on base attack to ensure it's\n  // at least 1.\n  var minAttack = baseAttack < 1 ? 1 : baseAttack;\n  var maxAttack = minAttack + attackRange; // Calculate attack value and return it\n\n  return Math.floor(Math.random() * (maxAttack - minAttack)) + minAttack;\n}\n\nfunction checkVictoryConditions(monsterHP, playerHP) {\n  // Checks if anyone won and determine the victor or draw.\n  // Display alert.\n  switch (true) {\n    // Draw condition\n    case monsterHP <= 0 && playerHP <= 0:\n      console.log(\"It's a draw\"); // alert(\"It's a draw\");\n\n      return \"draw\";\n      break;\n    // Victory condition\n\n    case monsterHP <= 0:\n      console.log(\"You have won!\"); // alert(\"You have won!\");\n\n      return \"player\";\n      break;\n    // Loss condition\n\n    case playerHP <= 0:\n      console.log(\"You have lost!\"); // alert(\"You have lost!\");\n\n      return \"monster\";\n      break;\n    // Default condition, winner is null.\n\n    default:\n      console.log(\"Still struggling!\");\n      return null;\n      break;\n  }\n}\n\n},{}]},{},[1]);\n"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","randomValue","baseAttack","arguments","undefined","minAttack","maxAttack","Math","floor","random","Vue","createApp","data","this","initializeGameData","computed","monsterBarStyles","width","monsterHP","playerBarStyles","playerHP","specialAttackDisabled","currentRound","gameOver","winner","watch","console","log","checkVictoryConditions","methods","attackMonster","attackRange","attackPlayer","specialAttackMonster","healPlayer","surrender","key","obj","value","Object","defineProperty","enumerable","configurable","writable","resetGame","assign","$data","mount"],"mappings":"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"}